-- SQL Exercise February 22, 2020
--Bryson Ewell

CREATE TABLE Customers (
	ID INT IDENTITY PRIMARY KEY,
	FirstName NVARCHAR(100) NOT NULL,
	LastName NVARCHAR(100) NOT NULL,
	CardNumber NCHAR(10) CHECK(ISNUMERIC(CardNumber)=1)
);

CREATE TABLE Products (
	ID INT IDENTITY PRIMARY KEY,
	Name NVARCHAR(100) UNIQUE,
	Price MONEY CHECK(Price>0),
);

CREATE TABLE Orders (
	ID INT IDENTITY PRIMARY KEY,
	ProductID INT,
	CustomerID INT,
	FOREIGN KEY (ProductID) REFERENCES Products(ID),
	FOREIGN KEY (CustomerID) REFERENCES Customers(ID)
);

-- Adding 3 records into each table
INSERT INTO Customers (FirstName, LastName, CardNumber) VALUES
	('John', 'Doe', '1234567890'),
	('Mary', 'Sue', '1234923890'),
	('Susan', 'Brown', '9867543021')

INSERT INTO Products (Name, Price) VALUES
	('Computer', 1000),
	('VR Headset', 500),
	('4K Monitor', 200)

INSERT INTO Orders (ProductID, CustomerID) VALUES
	(1,3),
	(2,2),
	(3,1)



-- Add Product iPhone priced at $200
INSERT INTO Products (Name, Price) VALUES
	('iPhone', 200)

-- Add customer Tina Smith
INSERT INTO Customers (FirstName, LastName, CardNumber) VALUES
	('Tina', 'Smith', '83675A9286')

-- Report all orders by Tina Smith
-- Using an explicit ID of 4 for Tina Smith instead of looking up her up by name because there could be multiple Tina Smiths and the name columns are not unique.
INSERT INTO Orders (ProductID, CustomerID) VALUES
	((SELECT ID FROM Products WHERE Name = 'iPhone'), 4)

-- Report all orders by Tina Smith
SELECT *
FROM ORDERS
WHERE CustomerID = 4


-- Report all revenue generated by sales of iPhone
SELECT SUM(p.Price) AS [Total Revenue Generated by iPhone]
FROM ORDERS As o
INNER JOIN Products AS p ON p.ID = o.ProductID
WHERE p.Name = 'iPhone'


-- Increase the price of iPhone to $250
UPDATE Products
SET Price = 250
WHERE Name = 'iPhone'